---
# This workflow initiates a release by looking for changes, bumping packages, and creating a pull request
#
# 1. Find directories that changed since the last release, since first commit.
# 2. Create a release branch formatted as `release/YYYY.MM.YYYYMMDDHHIISS`
# 2. 

on:
  workflow_dispatch:

permissions:
    actions: none
    attestations: none
    checks: none
    contents: none
    deployments: none
    discussions: none
    id-token: none
    issues: none
    models: none
    packages: none
    pages: none
    pull-requests: none
    repository-projects: none
    security-events: none
    statuses: none

jobs:

  look-for-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-directories: ${{ steps.find-changed-directories.outputs.changed-directories }}
    permissions:
      contents: write
    steps:
      - name: Debug
        run: |
          echo "::group::GITHUB object"
          echo "${{ toJson(github) }}"
          echo "::endgroup::"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0
      - name: find changed directories
        id: find-changed-directories
        run: |
          SINCE="$(gh release list --exclude-drafts --exclude-pre-releases --limit 1 --json tagName | jq -r '.[].tagName')"
          if [ -z "$SINCE" ]; then SINCE="$(git rev-list --max-parents=0 HEAD)"; fi;
          echo "$SINCE"
          CHANGEDFILES="$(git diff --name-only "$SINCE" HEAD | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')"
          SRCDIRECTORIES="$(echo $CHANGEDFILES | jq -r '.[] | select(. |startswith("src\/"))' | cut -d'/' -f2 | sort -u | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')"
          echo "changed-directories=$SRCDIRECTORIES" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  create-branch:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release-branch: ${{ steps.make-a-branch.outputs.release-branch }}
    needs: [look-for-changes]
    if: ${{ needs.look-for-changes.outputs.changed-directories != '[]' && needs.look-for-changes.outputs.changed-directories != '' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: make a branch
        id: make-a-branch
        run: |
          RELEASE="$(date +'%Y.%m.%Y%m%d%H%I%S')"
          RELEASEBRANCH="release/$RELEASE"
          git config --local user.email "scottschreckengaust@users.noreply.github.com"
          git config --local user.name "Scott Schreckengaust"
          git checkout -b "release/$RELEASE"
          mkdir -p changelogs
          echo "## [$RELEASE] - " > "changelogs/$RELEASE.md"
          echo "$SRCDIRECTORIES" >> "changelogs/$RELEASE.md"
          git add "changelogs"
          git commit -m "chore: $RELEASE"
          git push --set-upstream origin "$RELEASEBRANCH"
          echo "release-branch=$RELEASEBRANCH" >> $GITHUB_OUTPUT
    
  run-changed-directories:
    strategy:
      fail-fast: true
      matrix:
        changed-directory: ${{ fromJson(needs.look-for-changes.outputs.changed-directories) }}
      max-parallel: 1
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [look-for-changes, create-branch]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ needs.create-branch.outputs.release-branch }}
      - name: configure git
        run: |
          git config --local user.email "scottschreckengaust@users.noreply.github.com"
          git config --local user.name "Scott Schreckengaust"
      - name: bump
        run: |
          echo "TODO: ACTUALLY BUMP THE PACKAGE VERSION"
          echo "${{ github.run_id }}" >> "src/${{ matrix.changed-directory }}/__init__.py"
      - name: push
        run: |
          git add "src/${{ matrix.changed-directory }}"
          git commit -m "chore: bump src/${{ matrix.changed-directory }}"
          git pull
          git push

  create_pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [look-for-changes, create-branch, run-changed-directories]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          ref: ${{ needs.create-branch.outputs.release-branch }}
      - name: create pr
        run: |
          gh pr create --base "${{ github.ref_name }}" --head "${{ needs.create-branch.outputs.release-branch }}" --title "chore: ${{ needs.create-branch.outputs.release-branch }}" --body "# ${{ needs.create-branch.outputs.release-branch }} triggered ${{ github.workflow}} by @${{ github.triggering_actor }} for @${{ github.actor }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

